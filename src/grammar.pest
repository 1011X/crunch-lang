program = { (func_decl | type_decl | enum_decl)* }
w = _{ " "* }
func_signature = _{ "fn" ~ w ~ ident ~ "(" ~ w ~ param* ~ w ~ ")" ~ w ~ ("->" ~ w ~ ty)? ~ w ~ "\n" }
ident = { alpha_chars+ ~ (ASCII_ALPHANUMERIC | "_")* }
alpha_chars = _{ ASCII_ALPHA }
param = { ident ~ w ~ (":" ~ w ~ ty)? }
func_decl = _{ func_signature ~ ("    " ~ (binding | bin_op | func_call))+ }
func_call = { ident ~ w ~ "(" ~ w ~ ident* ~ w ~ ")" ~ w ~ "\n" }
binding = { "let" ~ w ~ param ~ w ~ "=" ~ w ~ (literal | func_call | bin_op) ~ w ~ "\n" }
type_decl = { "type" ~ w ~ ident ~ w ~ "\n" ~ w ~ ("    " ~ w ~ (ident ~ w ~ ":" ~ w ~ ty))* }
bin_op = { add | sub | add_assign | sub_assign }
bin_side = { ident | literal | func_call }
add = { bin_side ~ w ~ "+" ~ w ~ bin_side }
sub = { bin_side ~ w ~ "-" ~ w ~ bin_side }
add_assign = { bin_side ~ w ~ "+=" ~ w ~ bin_side }
sub_assign = { bin_side ~ w ~ "-=" ~ w ~ bin_side }
literal = { integer | string | bool }
integer = { hex_int | octal_int | bin_int | float_int | arabic_int }
arabic_int = @{ ASCII_DIGIT+ }
float_int = @{ ASCII_DIGIT+ ~ "." ~ ASCII_DIGIT+ }
hex_int = @{ "0x" ~ ASCII_HEX_DIGIT+ }
octal_int = @{ "0o" ~ ASCII_OCT_DIGIT+ }
bin_int = @{ "0b" ~ ASCII_BIN_DIGIT+ }
bool = @{ "true" | "false" }
string = @{ single_quote_str | double_quote_str }
single_quote_str = @{ "'" ~ (!"'" ~ ANY)* ~ "'" }
double_quote_str = @{ "\"" ~ (!"\"" ~ ANY)* ~ "\"" }
enum_decl = { "enum" ~ w ~ ident ~ w ~ "\n" ~ w ~ ("    " ~ enum_field)* }
enum_field = { ident ~ w ~ ("(" ~ w ~ ty* ~ w ~ ")")? }
ty = @{ "void" | "int" | "str" | "bool" | "[" ~ w ~ ty ~ w ~ "]" }
COMMENT = _{ "::" ~ (!"\n" ~ ANY)* }
WHITESPACE = _{ " " }
