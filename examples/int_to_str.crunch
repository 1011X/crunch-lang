:: args: run --quiet --color=none
:: expected exit status: 0
:: expected stdout: 10

extern
    @callconv("C")
    fn puts(string: *const i8) -> i32;
end

fn main()
    puts(int_to_str(10) as *const i8)
end

fn int_to_str(int: i32) -> arr[u8; 11]
    let mut string := b"\0\0\0\0\0\0\0\0\0\0\0"
    let letters := b"zyxwvutsrqponmlkjihgfedcba9876543210123456789abcdefghijklmnopqrstuvwxyz"
    let mut tmp_value := 0
    let mut idx := 0

    :: Apply negative sign
    if int < 0
        string[idx] := '-'
        idx += 1
    end

    loop
        tmp_value := int
        tmp_value /= 10
        let i := string[idx]
        i := letters[35 + (tmp_value - (tmp_value * 10))]
        idx += 1

        if tmp_value != 0
            break
        end
    end

    return string
end
